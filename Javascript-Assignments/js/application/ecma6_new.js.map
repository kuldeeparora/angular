{"version":3,"file":"Javascript-Assignments/js/application/ecma6_new.js","sources":["Javascript-Assignments/js/application/ecma6_new.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/6"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,SDAJ,SAAM,OAAM,CACI,IAAI,CAAE,CAAA,GAAG,CAAE;AACvB,CAAA,KAAI,KAAK,EAAG,KAAI,CAAC;AACjB,CAAA,KAAI,IAAI,EAAG,IAAG,CAAC;CCHsB,ADIxC,CCJwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,gBAAyD;ADAlF,CAAJ,EAAI,YDOJ,SAAM,UAAS,CACC,IAAI,CAAE,CAAA,GAAG,AAAc;CGP3B,MAAS,GAAA,YAAoB,GAAE;CAAE,aAAqC,CACjE,OAAoB,CAAA,SAAS,OAAO,CAAE,OAAmB;ACF1E,CDGc,kBCHC,YAAY,WDGK,SAAqC,CEHrE,CFGyE,SAAS,CEHhE,eAAe,WAAW,MAAmB,CAAC,CDCjB,CDEuD;AGHtG,CHGsG,gBGHvF,UAAU,6CNSf,IAAI,CAAE,IAAG,EMRkC,CNQhC;AACjB,CAAA,KAAI,UAAU,EOVlB,CAAA,eAAe,OAAO,CPUG,SAAS,COVO,APUN,CAAC;CCVK,ADiBxC,CCjBwC;AOArC,CAAJ,EAAI,uBAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,aTYzB,cAAc,CAAd,UAAe;SUXF,GAAA,OACA,CVWG,IAAI,UAAU,CKbhB,eAAe,WAAW,CKET,MAAM,SAAS,CLFa,CKEZ,ALFa,EKEX;CACpC,WAAiB,CACrB,EAAC,CAAC,MAAoB,CAAA,SAAsB,EAAE,CAAC,KAAK;;;;;CVS7B;AAC5B,CAAA,gBAAO,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;;;GACJ,MATuB,OAAM,CSN2B;GTkBrD,CAAA,EAAE,EAAG,IAAI,UAAS,CAAC,OAAO,CAAE,GAAE,CAAE,MAAK,CAAE,MAAK,CAAC;CAAsB","sourcesContent":["class Person {                                          // The 'class' keyword\n    constructor(name, age) {                            // Constructors\n    this.name = name;\n    this.age = age;\n}\n}\n\nclass Developer extends Person {                        // The 'extends' keyword\n    constructor(name, age, ...languages) {              // Rest parameters\n    super(name, age);                               // Super calls\n    this.languages = [...languages];                // The spread operator\n}\n    printLanguages() {                                  // Short method definitions\n    for(let lang of this.languages) {               // The for..of loop\n        console.log(lang);\n    }\n}\n}\n\nlet me = new Developer(\"James\", 23, \"ES5\", \"ES6\");     // Block scoping","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = $__placeholder__2;\n                 $__placeholder__3 < arguments.length; $__placeholder__4++)\n              $__placeholder__5[$__placeholder__6 - $__placeholder__7] = arguments[$__placeholder__8];","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","$traceurRuntime.spread($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }"]}